package model.paintStrategy;

import java.awt.geom.AffineTransform;

import model.paint.AnimePaintStrategy;

/**
 * Subclass of AnimatePaintStrategy that alternates between a Fish1PaintStrategy and a Fish2PaintStrategy.
 */
public class SwimFishPaintStrategy extends AnimePaintStrategy{

	/**
	 * No-parameter constructor that instantiates an AffineTransform for internal use.
	 */
	public SwimFishPaintStrategy() {
		this(new AffineTransform());
	}
	
	/**
	 * Constructor that takes an external AffineTransform for internal use.
	 * @param at - The AffineTransform to use
	 */
	public SwimFishPaintStrategy(AffineTransform at) {
		super(at, new Fish1PaintStrategy(), new Fish2PaintStrategy());
	}

}
