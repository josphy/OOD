<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_121) on Tue Oct 03 16:06:28 CDT 2017 -->
<title>APaintStrategy</title>
<meta name="date" content="2017-10-03">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="APaintStrategy";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":6};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/APaintStrategy.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../model/paint/paintstrategy/AnimatePaintStrategy.html" title="class in model.paint.paintstrategy"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../../../model/paint/paintstrategy/FixedColorDecoratorPaintStrategy.html" title="class in model.paint.paintstrategy"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?model/paint/paintstrategy/APaintStrategy.html" target="_top">Frames</a></li>
<li><a href="APaintStrategy.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">model.paint.paintstrategy</div>
<h2 title="Class APaintStrategy" class="title">Class APaintStrategy</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>model.paint.paintstrategy.APaintStrategy</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="../../../model/IPaintStrategy.html" title="interface in model">IPaintStrategy</a></dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../../../model/paint/paintstrategy/ADecoratorPaintStrategy.html" title="class in model.paint.paintstrategy">ADecoratorPaintStrategy</a>, <a href="../../../model/paint/paintstrategy/AnimatePaintStrategy.html" title="class in model.paint.paintstrategy">AnimatePaintStrategy</a>, <a href="../../../model/paint/paintstrategy/ImagePaintStrategy.html" title="class in model.paint.paintstrategy">ImagePaintStrategy</a>, <a href="../../../model/paint/paintstrategy/MultiPaintStrategy.html" title="class in model.paint.paintstrategy">MultiPaintStrategy</a>, <a href="../../../model/paint/paintstrategy/ShapePaintStrategy.html" title="class in model.paint.paintstrategy">ShapePaintStrategy</a></dd>
</dl>
<hr>
<br>
<pre>public abstract class <span class="typeNameLabel">APaintStrategy</span>
extends java.lang.Object
implements <a href="../../../model/IPaintStrategy.html" title="interface in model">IPaintStrategy</a></pre>
<div class="block">The top-level affine transform paint strategy that provides services for its
 subclasses, plus default behaviors and abstract behaviors.

 This class provides the basic affine transform services that its subclasses
 will use to resize, translate and rotate their prototype images into their
 proper current locations and orientations on the screen. This class is
 designed to be the root class for all strategies that use affine transforms
 to create their visual representations.

 One convenience service that APaintStrategy provides for all of its
 subclasses is default behavior for some of its methods. The subclasses only
 need to override those methods that it needs without having to explicitly
 implement the behaviors of all possible methods.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected java.awt.geom.AffineTransform</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../model/paint/paintstrategy/APaintStrategy.html#at">at</a></span></code>
<div class="block">An AffineTransform object used to perform all affine transforms</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="fields.inherited.from.class.model.IPaintStrategy">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;model.<a href="../../../model/IPaintStrategy.html" title="interface in model">IPaintStrategy</a></h3>
<code><a href="../../../model/IPaintStrategy.html#NULL_OBJECT">NULL_OBJECT</a></code></li>
</ul>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../../model/paint/paintstrategy/APaintStrategy.html#APaintStrategy-java.awt.geom.AffineTransform-">APaintStrategy</a></span>(java.awt.geom.AffineTransform&nbsp;at)</code>
<div class="block">Takes an AffineTransform object and store the reference.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../model/paint/paintstrategy/APaintStrategy.html#init-model.Ball-">init</a></span>(<a href="../../../model/Ball.html" title="class in model">Ball</a>&nbsp;host)</code>
<div class="block">By default, do nothing for initialization.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../model/paint/paintstrategy/APaintStrategy.html#paint-java.awt.Graphics-model.Ball-">paint</a></span>(java.awt.Graphics&nbsp;g,
     <a href="../../../model/Ball.html" title="class in model">Ball</a>&nbsp;host)</code>
<div class="block">Paint on the given graphics context using the color, scale and direction
 provided by the host.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../model/paint/paintstrategy/APaintStrategy.html#paintCfg-java.awt.Graphics-model.Ball-">paintCfg</a></span>(java.awt.Graphics&nbsp;g,
        <a href="../../../model/Ball.html" title="class in model">Ball</a>&nbsp;host)</code>
<div class="block">This method is used for doing additional configurations by a subclass.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>abstract void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../model/paint/paintstrategy/APaintStrategy.html#paintXfrm-java.awt.Graphics-model.Ball-java.awt.geom.AffineTransform-">paintXfrm</a></span>(java.awt.Graphics&nbsp;g,
         <a href="../../../model/Ball.html" title="class in model">Ball</a>&nbsp;host,
         java.awt.geom.AffineTransform&nbsp;at)</code>
<div class="block">Paint the host onto the given Graphics context.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="at">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>at</h4>
<pre>protected&nbsp;java.awt.geom.AffineTransform at</pre>
<div class="block">An AffineTransform object used to perform all affine transforms</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="APaintStrategy-java.awt.geom.AffineTransform-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>APaintStrategy</h4>
<pre>public&nbsp;APaintStrategy(java.awt.geom.AffineTransform&nbsp;at)</pre>
<div class="block">Takes an AffineTransform object and store the reference.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>at</code> - an AffineTransform object used to perform all affine transforms</dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="paint-java.awt.Graphics-model.Ball-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>paint</h4>
<pre>public&nbsp;void&nbsp;paint(java.awt.Graphics&nbsp;g,
                  <a href="../../../model/Ball.html" title="class in model">Ball</a>&nbsp;host)</pre>
<div class="block">Paint on the given graphics context using the color, scale and direction
 provided by the host.

 This Template Design Pattern method sets up AffineTransform object to
 translate, scale and rotate based on the the ball's current position,
 radius and velocity. It then delegates to two other methods to finish the
 job, the paintCfg() method to finish any further refinements of the
 affine transform and the paintXfrm() method to actually perform the
 painting.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../../model/IPaintStrategy.html#paint-java.awt.Graphics-model.Ball-">paint</a></code>&nbsp;in interface&nbsp;<code><a href="../../../model/IPaintStrategy.html" title="interface in model">IPaintStrategy</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>g</code> - a Graphics context that will be paint on</dd>
<dd><code>host</code> - a host Ball that the required information will be pulled from</dd>
</dl>
</li>
</ul>
<a name="paintCfg-java.awt.Graphics-model.Ball-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>paintCfg</h4>
<pre>protected&nbsp;void&nbsp;paintCfg(java.awt.Graphics&nbsp;g,
                        <a href="../../../model/Ball.html" title="class in model">Ball</a>&nbsp;host)</pre>
<div class="block">This method is used for doing additional configurations by a subclass.

 The paintCfg() method is set to be a concrete no-op that the subclasses may
 or may not override. This method allows the subclass to inject additional
 processing into the paint() method process before the final transformations
 are performed. Since this method is "protected", it is only available for
 use by the subclasses and not other types of objects.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>g</code> - a Graphics context that will be paint on</dd>
<dd><code>host</code> - a host Ball that the required information will be pulled from</dd>
</dl>
</li>
</ul>
<a name="paintXfrm-java.awt.Graphics-model.Ball-java.awt.geom.AffineTransform-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>paintXfrm</h4>
<pre>public abstract&nbsp;void&nbsp;paintXfrm(java.awt.Graphics&nbsp;g,
                               <a href="../../../model/Ball.html" title="class in model">Ball</a>&nbsp;host,
                               java.awt.geom.AffineTransform&nbsp;at)</pre>
<div class="block">Paint the host onto the given Graphics context. This method performs the
 actual painting.

 Notice that the translation, rotation and scaling have already been added
 to the affine transform before it gets to paintXfrm(). This allows the same
 affine transform to be shared amongst paint strategies, reducing the number
 of times that it has to be calculated. When an affine transform instance is
 being shared amongst strategies, then it is invariant across those
 strategies. Thus, this method allows an invariant translation, rotation and
 scaling to be performed that applies to all composed strategies.

 Since APaintStrategy doesn't know what sort of thing is being painted, it
 has no idea how exactly to apply the affine transform, so the paintXfrm()
 method must remain abstract, forcing the subclasses to implement it.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>g</code> - a Graphics context that will be paint on</dd>
<dd><code>host</code> - a host Ball that the required information will be pulled from</dd>
<dd><code>at</code> - an AffineTransform object used to perform all affine transforms</dd>
</dl>
</li>
</ul>
<a name="init-model.Ball-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>init</h4>
<pre>public&nbsp;void&nbsp;init(<a href="../../../model/Ball.html" title="class in model">Ball</a>&nbsp;host)</pre>
<div class="block">By default, do nothing for initialization.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../../model/IPaintStrategy.html#init-model.Ball-">init</a></code>&nbsp;in interface&nbsp;<code><a href="../../../model/IPaintStrategy.html" title="interface in model">IPaintStrategy</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>host</code> - a host Ball that the required information will be pulled from</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/APaintStrategy.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../model/paint/paintstrategy/AnimatePaintStrategy.html" title="class in model.paint.paintstrategy"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../../../model/paint/paintstrategy/FixedColorDecoratorPaintStrategy.html" title="class in model.paint.paintstrategy"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?model/paint/paintstrategy/APaintStrategy.html" target="_top">Frames</a></li>
<li><a href="APaintStrategy.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
