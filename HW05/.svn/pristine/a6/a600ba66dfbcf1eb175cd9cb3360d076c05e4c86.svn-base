package model.updatestrategy;

import java.awt.Point;

import model.Ball;
import model.IBallCmd;
import model.IInteractStrategy;
import model.IUpdateStrategy;
import util.IDispatcher;
import util.Randomizer;

/**
 * interaction behavior: ball escape to a random location
 */
public class EscapeUpdateStrategy implements IUpdateStrategy<IBallCmd> {

	/**
	 * install escape interact strategy into the context ball
	 * @param context this ball
	 */
	@Override
	public void init(Ball context) {
		context.setInteractStrategy(new IInteractStrategy(){

			@Override
			public void interact(Ball context, Ball target, IDispatcher<IBallCmd> disp) {
				if (context!=target) {
					Point loc = new Point();
					loc.x = Randomizer.Singleton.randomInt(target.getRadius(), target.getCanvas().getWidth() - target.getRadius());
					loc.y = Randomizer.Singleton.randomInt(target.getRadius(), target.getCanvas().getHeight() - target.getRadius());
					target.setLocation(loc);							
				}
			}
		});

	}

	/**
	 * update method called by timer
	 * @param context this ball
	 * @param dispatcher current dispatcher
	 */
	@Override
	public void updateState(Ball context, IDispatcher<IBallCmd> dispatcher) {
		// TODO Auto-generated method stub
		
	}

}
