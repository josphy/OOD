package client.model.task;

import java.rmi.RemoteException;

import provided.compute.ILocalTaskViewAdapter;
import provided.compute.ITask;
import provided.compute.ITaskResultFormatter;

public class MultiTask<Q,R> implements ITask<String> {
	
	private static final long serialVersionUID = -2062204862714215781L;
	
	private ITask<Q> task1;
	
	private ITask<R> task2;
	
	private transient ILocalTaskViewAdapter taskView = ILocalTaskViewAdapter.DEFAULT_ADAPTER;

	public MultiTask(ITask<Q> task1, ITask<R> task2) {
		this.task1 = task1;
		this.task2 = task2;
	}

	@Override
	public String execute() throws RemoteException {
		taskView.append("MultiTask executing: \n");		
		String output = "";
		taskView.append("(Executing Task #1)");
		output += "(1) " + task1.getFormatter().format(this.task1.execute()) +'\n';
		taskView.append("(Executing Task #2)");
		output += "(2) " + task2.getFormatter().format(this.task2.execute());
		return output; 
	}

	@Override
	public void setTaskViewAdapter(ILocalTaskViewAdapter viewAdapter) {
		taskView=viewAdapter;
		task1.setTaskViewAdapter(viewAdapter);
		task2.setTaskViewAdapter(viewAdapter);
	}

	@Override
	public ITaskResultFormatter<String> getFormatter() {
		return new ITaskResultFormatter<String>() {
    		public String format(String result) {
    			return "MultiTask results:\n" + result;
    		}
    	};
	}

}
