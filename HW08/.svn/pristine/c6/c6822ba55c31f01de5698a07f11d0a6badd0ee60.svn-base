<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_121) on Sun Oct 22 23:23:41 CDT 2017 -->
<title>GetTime</title>
<meta name="date" content="2017-10-22">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="GetTime";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/GetTime.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../client/model/task/GetSin.html" title="class in client.model.task"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../../../client/model/task/MultiTask.html" title="class in client.model.task"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?client/model/task/GetTime.html" target="_top">Frames</a></li>
<li><a href="GetTime.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">client.model.task</div>
<h2 title="Class GetTime" class="title">Class GetTime</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>client.model.task.GetTime</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.io.Serializable, provided.compute.ITask&lt;java.lang.String&gt;</dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">GetTime</span>
extends java.lang.Object
implements provided.compute.ITask&lt;java.lang.String&gt;</pre>
<div class="block">Task which retrieves the server's system time.</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Zheng You, Li Zhu</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../serialized-form.html#client.model.task.GetTime">Serialized Form</a></dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static provided.client.model.taskUtils.ITaskFactory&lt;java.lang.String&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../client/model/task/GetTime.html#FACTORY">FACTORY</a></span></code>
<div class="block">An ITaskFactory for this task</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../client/model/task/GetTime.html#input">input</a></span></code>
<div class="block">The input integer value</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private static long</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../client/model/task/GetTime.html#serialVersionUID">serialVersionUID</a></span></code>
<div class="block">serialVersionUID is the serial version UID.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private provided.compute.ILocalTaskViewAdapter</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../client/model/task/GetTime.html#taskView">taskView</a></span></code>
<div class="block">Adapter to the local view.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../../client/model/task/GetTime.html#GetTime-int-">GetTime</a></span>(int&nbsp;input)</code>
<div class="block">Constructor for the class.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../client/model/task/GetTime.html#execute--">execute</a></span>()</code>
<div class="block">Display the internal string on the server's console.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>provided.compute.ITaskResultFormatter&lt;java.lang.String&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../client/model/task/GetTime.html#getFormatter--">getFormatter</a></span>()</code>
<div class="block">Return an formatter that creates a String of the form:
 "Server Time: [result]
  Input Integer: [input]"</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../client/model/task/GetTime.html#readObject-java.io.ObjectInputStream-">readObject</a></span>(java.io.ObjectInputStream&nbsp;stream)</code>
<div class="block">Reinitializes transient fields upon deserialization.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../client/model/task/GetTime.html#setTaskViewAdapter-provided.compute.ILocalTaskViewAdapter-">setTaskViewAdapter</a></span>(provided.compute.ILocalTaskViewAdapter&nbsp;viewAdapter)</code>
<div class="block">Sets the task view adapter to a new value.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="serialVersionUID">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>serialVersionUID</h4>
<pre>private static final&nbsp;long serialVersionUID</pre>
<div class="block">serialVersionUID is the serial version UID.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../constant-values.html#client.model.task.GetTime.serialVersionUID">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a name="taskView">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>taskView</h4>
<pre>private transient&nbsp;provided.compute.ILocalTaskViewAdapter taskView</pre>
<div class="block">Adapter to the local view. Marked "transient" so that it is not serialized
 and instead is re-attached at the destination (the server).</div>
</li>
</ul>
<a name="input">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>input</h4>
<pre>private&nbsp;int input</pre>
<div class="block">The input integer value</div>
</li>
</ul>
<a name="FACTORY">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>FACTORY</h4>
<pre>public static final&nbsp;provided.client.model.taskUtils.ITaskFactory&lt;java.lang.String&gt; FACTORY</pre>
<div class="block">An ITaskFactory for this task</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="GetTime-int-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>GetTime</h4>
<pre>public&nbsp;GetTime(int&nbsp;input)</pre>
<div class="block">Constructor for the class.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>input</code> - integer input</dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="execute--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>execute</h4>
<pre>public&nbsp;java.lang.String&nbsp;execute()
                         throws java.rmi.RemoteException</pre>
<div class="block">Display the internal string on the server's console.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>execute</code>&nbsp;in interface&nbsp;<code>provided.compute.ITask&lt;java.lang.String&gt;</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the server's current time</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.rmi.RemoteException</code> - if a network error occurs</dd>
</dl>
</li>
</ul>
<a name="readObject-java.io.ObjectInputStream-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readObject</h4>
<pre>private&nbsp;void&nbsp;readObject(java.io.ObjectInputStream&nbsp;stream)
                 throws java.io.IOException,
                        java.lang.ClassNotFoundException</pre>
<div class="block">Reinitializes transient fields upon deserialization. taskView is set to a
 default value for now (ILocalTaskViewAdapter.DEFAULT_ADAPTER).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>stream</code> - The object stream with the serialized data</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code> - if the input stream cannot be read correctly</dd>
<dd><code>java.lang.ClassNotFoundException</code> - if the class file associated with the input
 stream cannot be located.</dd>
</dl>
</li>
</ul>
<a name="setTaskViewAdapter-provided.compute.ILocalTaskViewAdapter-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTaskViewAdapter</h4>
<pre>public&nbsp;void&nbsp;setTaskViewAdapter(provided.compute.ILocalTaskViewAdapter&nbsp;viewAdapter)</pre>
<div class="block">Sets the task view adapter to a new value. Test connection by sending a
 string representation of the dArray structure. Called by the server to
 attach the task to its view.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>setTaskViewAdapter</code>&nbsp;in interface&nbsp;<code>provided.compute.ITask&lt;java.lang.String&gt;</code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>viewAdapter</code> - the adapter to the view.</dd>
</dl>
</li>
</ul>
<a name="getFormatter--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getFormatter</h4>
<pre>public&nbsp;provided.compute.ITaskResultFormatter&lt;java.lang.String&gt;&nbsp;getFormatter()</pre>
<div class="block">Return an formatter that creates a String of the form:
 "Server Time: [result]
  Input Integer: [input]"</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>getFormatter</code>&nbsp;in interface&nbsp;<code>provided.compute.ITask&lt;java.lang.String&gt;</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>an formatter that creates a String object</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/GetTime.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../client/model/task/GetSin.html" title="class in client.model.task"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../../../client/model/task/MultiTask.html" title="class in client.model.task"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?client/model/task/GetTime.html" target="_top">Frames</a></li>
<li><a href="GetTime.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
