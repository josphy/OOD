<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_121) on Sun Oct 22 23:23:41 CDT 2017 -->
<title>ClientModel</title>
<meta name="date" content="2017-10-22">
<link rel="stylesheet" type="text/css" href="../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="ClientModel";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ClientModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../../client/model/IClientModel2ViewAdapter.html" title="interface in client.model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../index.html?client/model/ClientModel.html" target="_top">Frames</a></li>
<li><a href="ClientModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">client.model</div>
<h2 title="Class ClientModel" class="title">Class ClientModel</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>client.model.ClientModel</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">ClientModel</span>
extends java.lang.Object</pre>
<div class="block">Client model.</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Zheng You, Li Zhu</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private provided.compute.IRemoteTaskViewAdapter</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#clientTVA">clientTVA</a></span></code>
<div class="block">The adapter which the engine uses to append messages to the client's view.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private provided.compute.IRemoteTaskViewAdapter</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#clientTVAStub">clientTVAStub</a></span></code>
<div class="block">The stub which the client makes for the clientTVA.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private provided.compute.ICompute</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#computeStub">computeStub</a></span></code>
<div class="block">IComputer object stub to perform computation.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private provided.compute.IRemoteTaskViewAdapter</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#engineTVAStub">engineTVAStub</a></span></code>
<div class="block">The stub which the client uses to append messages to the engine's view.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../../client/model/IClientModel2ViewAdapter.html" title="interface in client.model">IClientModel2ViewAdapter</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#model2ViewAdapter">model2ViewAdapter</a></span></code>
<div class="block">The model to view adapter.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private java.util.function.Consumer&lt;java.lang.String&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#outputCmd">outputCmd</a></span></code>
<div class="block">Output command to put multiple lines on the client's view.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private provided.rmiUtils.IRMIUtils</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#rmiUtils">rmiUtils</a></span></code>
<div class="block">The RMI utility used by the client.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#ClientModel-client.model.IClientModel2ViewAdapter-">ClientModel</a></span>(<a href="../../client/model/IClientModel2ViewAdapter.html" title="interface in client.model">IClientModel2ViewAdapter</a>&nbsp;model2ViewAdapter)</code>
<div class="block">Constructor for the class.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#connectTo-java.lang.String-">connectTo</a></span>(java.lang.String&nbsp;remoteHost)</code>
<div class="block">Connects to the given remote host's Registry and retrieves the stub of the
 ICompute object bound to the ICompute.BOUND_NAME name in the remote
 Registry on port IRMI_Defs.REGISTRY_PORT.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#errorPrint-java.lang.String-java.lang.Exception-">errorPrint</a></span>(java.lang.String&nbsp;msg,
          java.lang.Exception&nbsp;e)</code>
<div class="block">Print error message in console and output it to the view.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>&lt;T&gt;&nbsp;java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#runTask-provided.compute.ITask-">runTask</a></span>(provided.compute.ITask&lt;T&gt;&nbsp;task)</code>
<div class="block">Run the given ITask on the remote engine server, returning the String
 formatted result, which is produced using the given ITask's
 ITaskResultFormatter object.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#sendMsgToComputeEngine-java.lang.String-">sendMsgToComputeEngine</a></span>(java.lang.String&nbsp;text)</code>
<div class="block">Sends a string message to the connected compute engine using the
 IRemoteTaskViewAdapter STUB received from the engine server.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#start--">start</a></span>()</code>
<div class="block">Starts the client model by initializing the RMI system and creating a
 remote view adapter stub for use by an engine server.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../client/model/ClientModel.html#stop--">stop</a></span>()</code>
<div class="block">Stops the client model by using the IRMIUtils to stop the RMI system.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="model2ViewAdapter">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>model2ViewAdapter</h4>
<pre>private&nbsp;<a href="../../client/model/IClientModel2ViewAdapter.html" title="interface in client.model">IClientModel2ViewAdapter</a> model2ViewAdapter</pre>
<div class="block">The model to view adapter.</div>
</li>
</ul>
<a name="outputCmd">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>outputCmd</h4>
<pre>private&nbsp;java.util.function.Consumer&lt;java.lang.String&gt; outputCmd</pre>
<div class="block">Output command to put multiple lines on the client's view.</div>
</li>
</ul>
<a name="rmiUtils">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rmiUtils</h4>
<pre>private&nbsp;provided.rmiUtils.IRMIUtils rmiUtils</pre>
<div class="block">The RMI utility used by the client.</div>
</li>
</ul>
<a name="computeStub">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>computeStub</h4>
<pre>private&nbsp;provided.compute.ICompute computeStub</pre>
<div class="block">IComputer object stub to perform computation.</div>
</li>
</ul>
<a name="engineTVAStub">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>engineTVAStub</h4>
<pre>private&nbsp;provided.compute.IRemoteTaskViewAdapter engineTVAStub</pre>
<div class="block">The stub which the client uses to append messages to the engine's view.</div>
</li>
</ul>
<a name="clientTVA">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clientTVA</h4>
<pre>private&nbsp;provided.compute.IRemoteTaskViewAdapter clientTVA</pre>
<div class="block">The adapter which the engine uses to append messages to the client's view.
 The adapter's stub is in the engine.</div>
</li>
</ul>
<a name="clientTVAStub">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>clientTVAStub</h4>
<pre>private&nbsp;provided.compute.IRemoteTaskViewAdapter clientTVAStub</pre>
<div class="block">The stub which the client makes for the clientTVA.</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="ClientModel-client.model.IClientModel2ViewAdapter-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>ClientModel</h4>
<pre>public&nbsp;ClientModel(<a href="../../client/model/IClientModel2ViewAdapter.html" title="interface in client.model">IClientModel2ViewAdapter</a>&nbsp;model2ViewAdapter)</pre>
<div class="block">Constructor for the class.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>model2ViewAdapter</code> - the client's model to view adapter</dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="start--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>start</h4>
<pre>public&nbsp;void&nbsp;start()</pre>
<div class="block">Starts the client model by initializing the RMI system and creating a
 remote view adapter stub for use by an engine server.

 Procedure:
 1. Use the IRMIUtils to start the RMI system, using
 port = IRMI_Defs.CLASS_SERVER_PORT_CLIENT. This will also automatically
 start the the security manager and the class file server for remote dynamic
 class loading.

 2. Export a STUB from the client's IRemoteTaskViewAdapter RMI server object.
 Save this stub for use when connecting to an engine server.</div>
</li>
</ul>
<a name="stop--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>stop</h4>
<pre>public&nbsp;void&nbsp;stop()</pre>
<div class="block">Stops the client model by using the IRMIUtils to stop the RMI system.
 This automatically stops class file server. This MUST be called before
 exiting the system!</div>
</li>
</ul>
<a name="connectTo-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>connectTo</h4>
<pre>public&nbsp;java.lang.String&nbsp;connectTo(java.lang.String&nbsp;remoteHost)</pre>
<div class="block">Connects to the given remote host's Registry and retrieves the stub of the
 ICompute object bound to the ICompute.BOUND_NAME name in the remote
 Registry on port IRMI_Defs.REGISTRY_PORT.

 Procedure:
 1. Use the IRMIUtils to retrieve the remote Registry at the given IP
 address.
 2. Use the remote Registry to retrieve an ICompute STUB bound to the name
 defined by IComputer.BOUND_NAME. Save the reference to the IComputer stub
 somewhere.
 3. Use the ICompute stub to assign the client's IRemoteTaskViewAdapter STUB
 of the remote engine server and to retrieve the compute engine's
 IRemoteTaskViewAdapter stub. Save the retrieved stub for later use. Use the
 retrieved stub to send a connection status message to the remote compute
 engine's user interface.
 4. Return a string indicating the success or failure of the connection
 attempt.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>remoteHost</code> - The IP address or host name of the remote server.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A status string on the connection.</dd>
</dl>
</li>
</ul>
<a name="sendMsgToComputeEngine-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendMsgToComputeEngine</h4>
<pre>public&nbsp;void&nbsp;sendMsgToComputeEngine(java.lang.String&nbsp;text)</pre>
<div class="block">Sends a string message to the connected compute engine using the
 IRemoteTaskViewAdapter STUB received from the engine server. This message
 should also be echoed to the local user interface.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>text</code> - The message to be sent</dd>
</dl>
</li>
</ul>
<a name="runTask-provided.compute.ITask-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>runTask</h4>
<pre>public&nbsp;&lt;T&gt;&nbsp;java.lang.String&nbsp;runTask(provided.compute.ITask&lt;T&gt;&nbsp;task)</pre>
<div class="block">Run the given ITask on the remote engine server, returning the String
 formatted result, which is produced using the given ITask's
 ITaskResultFormatter object.</div>
<dl>
<dt><span class="paramLabel">Type Parameters:</span></dt>
<dd><code>T</code> - The return type of the give ITask</dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>task</code> - The task to run on the remote engine server.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A string representation of the task results, using the task's
         formatter object.</dd>
</dl>
</li>
</ul>
<a name="errorPrint-java.lang.String-java.lang.Exception-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>errorPrint</h4>
<pre>private&nbsp;void&nbsp;errorPrint(java.lang.String&nbsp;msg,
                        java.lang.Exception&nbsp;e)</pre>
<div class="block">Print error message in console and output it to the view.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>msg</code> - the error message</dd>
<dd><code>e</code> - the Exception object</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ClientModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../../client/model/IClientModel2ViewAdapter.html" title="interface in client.model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../index.html?client/model/ClientModel.html" target="_top">Frames</a></li>
<li><a href="ClientModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
